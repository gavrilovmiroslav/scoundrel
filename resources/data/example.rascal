event CheckCollision { x: num, y: num, velX: num, velY: num};
event CheckMovables { x: num, y: num, velX: num, velY: num};

tag IsMovable;

[Spawn Player On Start]
on Start
{
debug print "Start ID: " + _;
    spawn player with IsPlayer
                    & IsAt(x=10, y=10)
                    & HasGlyph(glyph='@')
                    & HasColor(hue=255, sat=255, val=255);

}


[Exit On Escape Key|first]
on KeyPress("Escape", "Released")
{
    quit;
}

[Toggle UI]
on KeyPress("U", "Released")
{
    update _ with toggle:UI;
    consume event;
}


[Check Collision with movable obstacles]
on CheckCollision(x, y, velX, velY)
with not:.IsPlayer
& .IsAt(px, py)
{
    if ((px - velX) == x)
    {
        if ((py - velY) == y)
        {
            if (_.IsMovable)
            {
                debug print "Collision with movables" + _;
                trigger CheckMovables(x=x,y=y,velX=velX,velY=velY);            
            }
            else
            {
                consume event;
            }
        } 
    }
}

[Move Player After Collision Check|last]
on CheckCollision(x, y, velX, velY)
with .IsPlayer
& .IsAt(px, py)
{
    px = (x + velX);
    py = (y + velY);
}

[Check Movables]
on CheckMovables(x, y, velX, velY)
with .IsAt(px, py)
& .IsMovable
{
    if ((px - velX) == x)
    {
        if ((py - velY) == y)
        {
        debug print "Moving movable" + _;
            px += velX;
            py += velY;
            consume event;
        }
    }
}

[Move By Keyboard]
on KeyPress(key, "Pressed")
with .IsPlayer
   & .IsAt(x, y)
{
    match key {
        case "A": { trigger CheckCollision(x=x, y=y, velX = (0-1), velY = 0); consume event; }
        case "D": { trigger CheckCollision(x=x, y=y, velX = 1, velY = 0); consume event; }
        case "W": { trigger CheckCollision(x=x, y=y, velX = 0, velY = (0-1)); consume event; }
        case "S": { trigger CheckCollision(x=x, y=y, velX = 0, velY = 1); consume event; }
    }
    
}

[Leave Breadcrumb]
on KeyPress("F5", "Released")
with .IsPlayer
   & .IsAt(x, y)
{
    spawn crumb with IsAt(x=x, y=y) & HasGlyph(glyph='t') & IsMovable;
    debug print "Crumb:" + crumb;
    debug print "ID:" + _;
    consume event;
}