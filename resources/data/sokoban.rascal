
unique terrain: field of symbol;
event MoveIntent { e: entity, p: num, q: num };

[Spawn Player On Start]
on Start
{
    spawn player with
        IsPlayer
      & IsAt(20, 20)
      & HasGlyph('@')
      & HasColor(0, 0, 255);

    let room_space = make_set();

    for i in 0 to 10 {
        let w = rand(10, 15);
        let h = rand(8, 12);
        let x = rand(1, 64 - w);
        let y = rand(1, 48 - h);

        let outer = rectangle(x, y; x + w, y + h);
        let inner = rectangle(x + 1, y + 1; x + w - 1, y + h - 1);
        if empty(intersect(room_space, inner)) {
            room_space = union(room_space, outer);
            terrain[diff(outer, inner)] = '#';
            terrain[inner] = '-';
        }
    }

    for i in 0 to 200 {
        let w = rand(5, 8);
        let h = rand(5, 7);
        let x = rand(1, 64 - w);
        let y = rand(1, 48 - h);

        let outer = rectangle(x, y; x + w, y + h);
        let inner = rectangle(x + 1, y + 1; x + w - 1, y + h - 1);
        if empty(intersect(room_space, inner)) {
            room_space = union(room_space, outer);
            terrain[diff(outer, inner)] = '#';
            terrain[inner] = '-';
        }
    }

    for i in 0 to 100 {
        let w = rand(4, 6);
        let h = rand(4, 5);
        let x = rand(1, 64 - w);
        let y = rand(1, 48 - h);

        let outer = rectangle(x, y; x + w, y + h);
        let inner = rectangle(x + 1, y + 1; x + w - 1, y + h - 1);
        if empty(intersect(room_space, inner)) {
            room_space = union(room_space, outer);
            terrain[diff(outer, inner)] = '#';
            terrain[inner] = '-';
        }
    }
}

// ===== KEYBOARD EVENTS =====================================

[Move By Keyboard|first]
on KeyPress(key, "Pressed")
with e.IsPlayer & e.IsAt(x, y)
{
    let p = x, q = y;
    match key {
        case "Left": p = x - 1;
        case "Right": p = x + 1;
        case "Up": q = y - 1;
        case "Down": q = y + 1;
    } then {
        trigger MoveIntent(e, p, q);
        consume event;
    }
}

[Do Move Intent|last]
on MoveIntent(e, p, q)
with e.IsPlayer & e.IsAt(x, y)
{
    x = p;
    y = q;
    consume event;
}

[Draw Terrain]
with unique(terrain)
{
    print terrain;
}